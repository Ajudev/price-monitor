version: '3.3'
services:
  db:
    image: postgres:14
    container_name: rates_db
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U app -d pricedb'" ]
      interval: 10s
      timeout: 10s
      retries: 2
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: sp@Ju8lfr12#unotid09
      POSTGRES_DB: pricedb
      PGUSER: app
    ports:
      - "0.0.0.0:2345:5432"

  redis_service:
    image: redis
    container_name: rates_redis
    restart: always
    ports:
      - "0.0.0.0:9736:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 10s
      retries: 2
    command: redis-server
    volumes:
      - cache:/data

  django_app:
    container_name: rates_django
    build: .
    command: >
      sh -c "python manage.py makemigrations api --settings price_monitor.settings.production &&
            python manage.py migrate --settings price_monitor.settings.production &&
            python manage.py runserver --settings price_monitor.settings.production 0.0.0.0:8000"
    volumes:
      - django_app:/app
    depends_on:
      db:
        condition: service_healthy
      redis_service:
        condition: service_healthy
    ports:
      - "0.0.0.0:5678:8000"

  celery_worker:
    container_name: rates_celery_worker
    build:
      context: .
    command: >
      sh -c "celery -A price_monitor worker -l info"
    volumes:
      - django_app:/app
    depends_on:
      - db
      - redis_service
      - django_app

  celery_beat:
    container_name: rates_celery_beat
    build:
      context: .
    command: >
      sh -c "celery -A price_monitor beat -l info"
    volumes:
      - django_app:/app
    depends_on:
      - db
      - redis_service
      - django_app
      - celery_worker

volumes:
  db_data:
  cache:
  django_app:
